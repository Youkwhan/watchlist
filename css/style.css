:root {
	--ff-primary: "Inter", sans-serif;

	--clr-bg: #171821;
	--clr-nav-bg: #282a30;

	--clr-primary: #fff;
	--clr-secondary: #272831;
	--clr-nav-gold: #f7da59;
	--clr-text-gray: #818087;
	--clr-text-accent: #d3af37;
	--clr-line: #272831;

	--fw-large: 800;
	--fw-semi-large: 700;
	--fw-medium: 500;
	--fw-regular: 400;

	--fs-large: 2.688em;
	--fs-semi-large: 1.25em;
	--fs-medium: 1em;
	--fs-regualr: 0.75em;
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

* {
	margin: 0;
	padding: 0;
	/* button and input inhert the font */
	font: inherit;
}

html,
body {
	height: 100%;
}

html {
	scroll-behavior: smooth;
}

body {
	font-family: var(--ff-primary);
	background: var(--clr-bg);
	color: var(--clr-primary);
	line-height: 1.5;
}

img {
	display: block;
	max-width: 100%;
}

h1 {
	margin: 0;
}

a {
	text-decoration: none;
}

.spacing {
	padding: 0.75rem;
}

/* html * {
	background: rgba(255, 0, 0, 0.1);
	box-shadow: 0 0 0 1px red;
} */

/* Typography */

h1 {
	font-weight: var(--fw-large);
	font-size: var(--fs-large);
}

h2 {
	font-weight: var(--fw-semi-large);
	font-size: var(--fs-semi-large);
}

h3 {
	font-weight: var(--fw-medium);
	font-size: var(--fs-medium);
}

.rating,
p {
	font-weight: var(--fw-regular);
	font-size: var(--fs-regualr);
}

header p {
	font-weight: var(--fw-medium);
	font-size: var(--fs-medium);
	color: var(--clr-text-gray);
}

.empty-message h3 {
	color: var(--clr-text-gray);
}

/* Button */
.btn {
	background: transparent;
	color: var(--clr-primary);
	border: none;
	cursor: pointer;

	text-decoration: none;
}

.btn:hover,
.btn:focus {
	color: yellowgreen;
}

nav a {
	transition: 0.25s;
}

/* Layout */

/* navbar */
nav {
	display: flex;
	background-color: var(--clr-nav-bg);
}

nav a h2 {
	padding: 0.75em 2em;
	color: var(--clr-primary);
}

nav a:nth-child(1) {
	background-color: var(--clr-bg);
}

nav a:hover h2,
nav a:focus h2 {
	color: yellowgreen;
}

nav a:hover,
nav a:focus {
	/* border:1px solid yellowgreen; */
	box-shadow: 0 0.5em 0.5em -0.4em yellowgreen;
	transform: translateY(-0.25em);
}

.content-container {
	padding-left: 1em;
	padding-right: 1em;
}

/* Header */
header {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: flex-end;
	border-bottom: 3px solid var(--clr-line);
	padding-top: 3em;
	padding-bottom: 0.5em;
}

/* cards */
main {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
	gap: 2rem;

	justify-items: center;
}

.card {
	/* min, max allows us to grow as grid grows to fill up the space, but limit how small ;) */
	min-width: 20rem;
	max-width: 25rem;

	border-radius: 20px;
	box-shadow: 0 5px 10px -2px yellowgreen;
	overflow: hidden;
	transition: transform 500ms ease;
}

.card__poster img {
	width: 100%;
	object-fit: cover;
	transition: transform 500ms ease;
}

.card:hover .card__poster img,
.card:focus-within .card__poster img {
	transform: translateY(-30px);
	/* filter: blur(2px); */
}
.card:hover,
.card:focus-within {
	transform: scale(1.05);
}

/* our content's faded background, for readability against img */
.card__details {
	background: linear-gradient(
		hsl(0 0% 0% / 0),
		hsl(20 0% 0% / 0.3) 20%,
		hsl(0 0% 0% / 1)
	);

	--padding: 1.5rem;
	padding: var(--padding);
}

.card__details__header {
	position: relative;
	/* prevent overflow with longer title */
	width: 100%;
}

/* we use ::after bcz we want to position it down? But it starts below originally, NO bcz we use grid to put it on top remember so we push down( wait no we are using absolute, so might have to change to grid 1/1, lets see */
.card__details__header::after {
	content: "";
	position: absolute;
}

/* 
.card__poster {
	position: relative;
}

.card__poster::before {
	content: "";
	position: absolute;
	bottom: -11.25em;

	width: 100%;
	height: 100%;
	background: linear-gradient(0deg, var(--clr-secondary) 50%, transparent);
	transition: 0.5s;
	z-index: 1;
} */

/* When card hovered, bring up card-poster::before (bg-shdaow) back up to original position */
/* .card:hover .card__poster::before {
	bottom: 0px;
} */

/* .card:hover .card__poster img {
	transform: translateY(-50px);
	filter: blur(5px);
} */

/* Default where card details should be position (which part hidden/showing) */
/* .card__details {
	position: absolute;
	width: 100%;
	bottom: -80px;
	left: 0;
	padding: 20px;
	z-index: 2;
	transition: 0.5s;
} */

/* When card hovered, bring up details, bottom:0 bcz we want to show entire div */
/* .card:hover .card__details {
	bottom: 0px;
} */

/* card details */

.card__details__header {
	display: flex;
	justify-content: space-between;
	align-items: baseline;
}

.card__details__header--title {
	min-width: 11.25em;
}

.card__details__props {
	margin-top: 0.5em;

	display: flex;
	flex-direction: column;
	flex-wrap: wrap; /* Just incase wrap if too long */
}

.card__details__props--group1,
.card__details__props--group2,
.card__details__props--group3 {
	/* width: 60%; */

	display: flex;
	justify-content: space-between;
}

.card__details__props--group1 > *,
.card__details__props--group2 > *,
.card__details__props--group3 > * {
	display: inline-block;
}

.add-watchlist {
	padding-top: 1em;
}

.card__details__plot {
	margin-top: 20px;
}

/* Empty messages */

.empty-message {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);

	opacity: 1;
	font-size: 1.5em;
	text-align: center;
}
